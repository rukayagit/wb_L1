/*
Побитовые операторы интерпретируют операнды как
последовательность из 32 битов (нулей и единиц).
Они производят операции, используя двоичное представление числа,
и возвращают новую последовательность из 32 бит (число) в качестве результата.

^: побитовое исключающее ИЛИ(XOR). Возвращает 1, если
только один из соответствующих разрядов обоих чисел равен 1
бит 1|бит 2|результат
  1  |  1  |    0
  1  |  0  |    1
  0  |  1  |    1
  0  |  0  |    0
*/

package main

import "fmt"

func main() {
	var a, b int //создаем переменные a и b
	fmt.Println("Введите числа a и b:")
	fmt.Scan(&a, &b) //вводим значения a и b
	fmt.Printf("До перестановки: a = %d, b =  %d\n", a, b)

	a = a ^ b //XOR a и b
	b = a ^ b //теперь b содержит исходное значение a
	a = a ^ b //теперь a содержит исходное значение b

	fmt.Printf("После перестановки: a = %d, b = %d\n", a, b)
}
